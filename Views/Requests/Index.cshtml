@model IssueManager.Models.ViewModels.Requests.RequestsListViewModel
@using IssueManager.Utilities 

@{
    ViewData["Title"] = "Index";
}

<div class="container">
    <div class="app-container">
        <div class="app-header">
            <h2 class="mb-0">Request Management</h2>
            <p class="mb-0 opacity-75">View and manage all requests</p>
        </div>
        <p class="d-inline-flex gap-1">
            <button class="app-btn app-btn-main" type="button" data-bs-toggle="collapse" data-bs-target="#requestsFilters" aria-expanded="false" aria-controls="requestsFilters">
                Show filters
            </button>
        </p>
        <div class="collapse" id="requestsFilters">
            <form asp-action="Index" method="get" class="d-flex flex-column gap-1">
                <div class="row g-1">
                    <div class="col-md-3">
                        <div class="form-floating">
                            <input asp-for="Filters.RequestId" class="form-control app-form-control" placeholder="Enter ID" type="text" />
                            <label asp-for="Filters.RequestId"></label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating">
                            <input asp-for="Filters.Title" class="form-control app-form-control" placeholder="Enter title" />
                            <label asp-for="Filters.Title"></label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating">
                            <input asp-for="Filters.Description" class="form-control app-form-control" placeholder="Enter description" />
                            <label asp-for="Filters.Description"></label>
                        </div>
                    </div>
                </div>

                <div class="row g-1">
                    <div class="col-md-3">
                        <div class="form-floating">
                            <select asp-for="Filters.Priority" class="form-select app-form-control"
                            asp-items="@Html.GetEnumSelectList(typeof(RequestPriority))">
                                <option value="">-- Select --</option>
                            </select>
                            <label asp-for="Filters.Priority"></label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating">
                            <select asp-for="Filters.Status" class="form-select app-form-control"
                            asp-items="@Html.GetEnumSelectList(typeof(RequestStatus))">
                                <option value="">-- Select --</option>
                            </select>
                            <label asp-for="Filters.Status"></label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating">
                            <select asp-for="Filters.CategoryId" class="form-select app-form-control"
                            asp-items="ViewBag.CategorySelectOptions">
                                <option value="">-- Select --</option>
                            </select>
                            <label asp-for="Filters.CategoryId"></label>
                        </div>
                    </div>
                </div>

                <div class="row g-1">
                    <div class="col-md-3">
                        <div class="form-floating">
                            <select asp-for="Filters.AuthorId" class="form-select app-form-control"
                            asp-items="ViewBag.UserSelectOptions">
                                <option value="">-- Select --</option>
                            </select>
                            <label asp-for="Filters.AuthorId"></label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating">
                            <select asp-for="Filters.AssignedUserId" class="form-select app-form-control" id="assignedUserSelect"
                            asp-items="ViewBag.UserSelectOptions">
                                <option value="">-- Select --</option>
                            </select>
                            <label asp-for="Filters.AssignedUserId"></label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating">
                            <select asp-for="Filters.AssignedTeamId" class="form-select app-form-control" id="assignedTeamSelect"
                            asp-items="ViewBag.TeamSelectOptions">
                                <option value="">-- Select --</option>
                            </select>
                            <label asp-for="Filters.AssignedTeamId"></label>
                        </div>
                    </div>
                </div>

                <div class="row g-1">
                    <div class="col-md-3">
                        <div class="form-floating">
                            <input asp-for="Filters.CreatedBefore" class="form-control app-form-control" type="date" />
                            <label asp-for="Filters.CreatedBefore"></label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating">
                            <input asp-for="Filters.CreatedAfter" class="form-control app-form-control" type="date" />
                            <label asp-for="Filters.CreatedAfter"></label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating">
                            <input asp-for="Filters.UpdatedBefore" class="form-control app-form-control" type="date" />
                            <label asp-for="Filters.UpdatedBefore"></label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating">
                            <input asp-for="Filters.UpdatedAfter" class="form-control app-form-control" type="date" />
                            <label asp-for="Filters.UpdatedAfter"></label>
                        </div>
                    </div>
                </div>

                <div class="my-2">
                    <button type="submit" class="app-btn app-btn-main">Search</button>
                    <button type="button" class="app-btn app-btn-cancel"
                        onclick="window.location.href = window.location.pathname">
                        Reset
                   </button>
                </div>
            </form>
        </div>

        <div class="table-responsive">
            <table class="table app-table">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Requests[0].Title)</th>
                        <th>@Html.DisplayNameFor(model => model.Requests[0].Status)</th>
                        <th>@Html.DisplayNameFor(model => model.Requests[0].Priority)</th>
                        <th>@Html.DisplayNameFor(model => model.Requests[0].CreateDate)</th>
                        <th>@Html.DisplayNameFor(model => model.Requests[0].UpdateDate)</th>
                        <th>@Html.DisplayNameFor(model => model.Requests[0].CategoryName)</th>
                        <th>@Html.DisplayNameFor(model => model.Requests[0].AssignedUserName)</th>
                        <th>@Html.DisplayNameFor(model => model.Requests[0].AssignedTeamName)</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Requests.Count == 0)
                    {
                        <tr><td colspan="12">No requests found</td></tr>
                    } 
                    else {
                        foreach (var item in Model.Requests)
                        {
                            <tr onclick="location.href = '@Url.Action("Details", "Requests", new { id = item.Id })'"
                                style="cursor: pointer">
                                <td>@ViewHelpers.Truncate(item.Title)</td>
                                <td>
                                    <span class="app-badge @(item.Status.ToString().ToLower())"
                                          style="background-color: @ViewHelpers.GetStatusColor(item.Status)">
                                        @Html.DisplayFor(modelItem => item.Status)
                                    </span>
                                </td>
                                <td>
                                    <span class="app-badge"
                                          style="background-color: @ViewHelpers.GetPriorityColor(item.Priority)">
                                        @Html.DisplayFor(modelItem => item.Priority)
                                    </span>
                                </td>
                                <td>@item.CreateDate.ToString("MMM dd, yyyy")</td>
                                <td>@item.UpdateDate?.ToString("MMM dd, yyyy")</td>
                                <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                                <td>@Html.DisplayFor(modelItem => item.AssignedUserName)</td>
                                <td>@Html.DisplayFor(modelItem => item.AssignedTeamName)</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <nav>
            <ul class="pagination">
                @if (Model.Requests.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-all-route-data="@Model.Filters?.ToRouteValues(Model.Requests.PageIndex - 1)">Previous</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled"><span class="page-link">Previous</span></li>
                }

                @for (int i = 1; i <= Model.Requests.TotalPages; i++)
                {
                    <li class="page-item app-page-item @(i == Model.Requests.PageIndex ? "active" : "")">
                        <a class="page-link" asp-all-route-data="@Model.Filters?.ToRouteValues(i)">@i</a>
                    </li>
                }

                @if (Model.Requests.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-all-route-data="@Model.Filters?.ToRouteValues(Model.Requests.PageIndex + 1)">Next</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled"><span class="page-link">Next</span></li>
                }
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    @{
        <script id="usersByTeamData" type="application/json">
            @Html.Raw(Json.Serialize(ViewBag.UsersByTeam))
        </script>

        <script src="~/js/filterUsersByGroup.js"></script>
    }
}
